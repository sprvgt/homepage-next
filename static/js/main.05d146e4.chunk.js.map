{"version":3,"sources":["index.tsx"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","undefined","currentStep","xIsNext","slice","current","calculateWinner","setState","concat","length","step","status","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4MAWA,SAASA,EAAOC,GACd,OACE,wBACIC,UAAU,SACVC,QAASF,EAAME,QAFnB,SAGGF,EAAMG,Q,IAaPC,E,kKACJ,SAAaC,GAAY,IAAD,OACtB,OACE,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAC9BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAI1C,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAxBTC,IAAMC,WAqCpBC,E,kDACJ,WAAYX,GAAY,IAAD,8BACrB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CACPC,MAAM,GAAGC,UAAKC,IAEhBC,YAAa,EACbC,SAAS,GAPU,E,+CAWvB,SAAYb,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQM,MAAM,EAAGb,KAAKM,MAAMK,YAAc,GAC/DG,EAAUP,EAAQP,KAAKM,MAAMK,aACnC,IAAII,EAAgBD,KAAYA,EAAQf,GAAxC,CAGA,IAAME,EAAUa,EAAQD,QACxBZ,EAAQF,GAAKC,KAAKM,MAAMM,QAAU,IAAM,IACxCZ,KAAKgB,SAAS,CACZT,QAASA,EAAQU,OAAO,CAAChB,IACzBU,YAAaJ,EAAQW,OACrBN,SAAUZ,KAAKM,MAAMM,a,oBAIzB,SAAOO,GACL,IAAMZ,EAAUP,KAAKM,MAAMC,QAC3BP,KAAKgB,SAAS,CACZT,QAASA,EAAQM,MAAM,EAAGM,EAAO,GACjCR,YAAaQ,EACbP,QAASO,EAAO,IAAM,M,oBAI1B,WAAU,IAiBJC,EAjBG,OACDb,EAAUP,KAAKM,MAAMC,QACrBO,EAAUP,EAAQA,EAAQW,OAAS,GACnCG,EAASN,EAAgBD,GAEzBQ,EAAQf,EAAQgB,KAAI,SAACJ,EAAMK,GAC/B,IAAMC,EAAOD,EACT,eAAiBA,EACf,mBAEN,OACE,6BACE,wBAAQ5B,QAAS,kBAAM,EAAK8B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEJ,EADEC,EACO,WAAaA,EAEb,iBAAmBrB,KAAKM,MAAMM,QAAU,IAAM,KAIvD,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CAAOG,QAAWa,EACdlB,QAAW,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,QAEzC,sBAAKJ,UAAU,YAAf,UACE,8BAAMyB,IACN,6BAAKE,c,GApEInB,IAAMC,WAkFzB,SAASW,EAAgBd,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMV,OAAQnB,IAAK,CACrC,kBAAkB6B,EAAM7B,GAAxB,GAAO8B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI9B,EAAQ4B,IACP5B,EAAQ4B,KAAO5B,EAAQ6B,IACvB7B,EAAQ4B,KAAO5B,EAAQ8B,GAC1B,OAAO9B,EAAQ4B,IArBrBG,IAASC,OACP,cAAC5B,EAAD,IACA6B,SAASC,eAAe,W","file":"static/js/main.05d146e4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Interface for Square's properties.\ninterface SquareProps {\n  value?: string;\n\n  onClick: () => void;\n}\n\nfunction Square(props: SquareProps) {\n  return (\n    <button \n        className=\"square\"\n        onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\ntype SquareSnapshot = Array<string | undefined>;\n\ninterface BoardProps {\n  squares: SquareSnapshot;\n\n  onClick: (i: number) => void;\n}\n\nclass Board extends React.Component<BoardProps> {\n  renderSquare(i: number) {\n    return (\n      <Square value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}/>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface GameState {\n  history: Array<SquareSnapshot>;\n  currentStep: number;\n  xIsNext: boolean;\n}\n\nclass Game extends React.Component<{}, GameState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      history: [\n        Array(9).fill(undefined),\n      ],\n      currentStep: 0,\n      xIsNext: true,\n    }\n  }\n\n  handleClick(i: number) {\n    const history = this.state.history.slice(0, this.state.currentStep + 1);\n    const current = history[this.state.currentStep];\n    if (calculateWinner(current) || current[i]) {\n      return;\n    }\n    const squares = current.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([squares]),\n      currentStep: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step: number) {\n    const history = this.state.history;\n    this.setState({\n      history: history.slice(0, step + 1),\n      currentStep: step,\n      xIsNext: step % 2 === 0 ? true : false,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n          'Go to move #' + move\n          : 'Go to game start';\n\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares = {current}\n              onClick = {(i) => this.handleClick(i)}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares: SquareSnapshot) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] \n      && squares[a] === squares[b]\n      && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return undefined;\n}\n"],"sourceRoot":""}